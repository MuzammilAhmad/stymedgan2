# -*- coding: utf-8 -*-
"""StyleGAN2_XRAY_NONCovid.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OQ93iMJtFsWj2V0jU-xFFm_Hk0y-fQA1

<a href="https://colab.research.google.com/github/jeffheaton/t81_558_deep_learning/blob/master/t81_558_class_07_2_train_gan.ipynb" target="_parent"><img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/></a>

# Google CoLab Instructions

The following code ensures that Google CoLab is running the correct version of TensorFlow.
"""

# Commented out IPython magic to ensure Python compatibility.

try:
    from google.colab import drive
    drive.mount('/content/drive', force_remount=True)
    COLAB = True
    print("Note: using Google CoLab")
#     %tensorflow_version 2.x
except:
    print("Note: not using Google CoLab")
    COLAB = False

!pip install torch==1.8.1 torchvision==0.9.1
!git clone https://github.com/NVlabs/stylegan2-ada-pytorch.git
!pip install ninja

"""## Find Your Files

The drive is mounted to the following location.

```
/content/drive/MyDrive/data
```

It might be helpful to use an ```ls``` command to establish the exact path for your images.
"""

!ls /content/drive/MyDrive/data2/images

"""## Convert Your Images

You must convert your images into a data set form that PyTorch can directly utilize. The following command converts your images and writes the resulting data set to another directory.
"""

CMD = "python /content/stylegan2-ada-pytorch/dataset_tool.py "\
  "--source /content/drive/MyDrive/data2/images/xray "\
  "--dest /content/drive/MyDrive/data2/dataset/xray"

!{CMD}

"""You can use the following command to clear out the newly created dataset.  If something goes wrong and you need to clean up your images and rerun the above command, you should delete your partially completed dataset directory."""

!rm -R /content/drive/MyDrive/data/dataset/xray/*

"""## Clean Up your Images

All images must have the same dimensions and color depth.  This code can identify images that have issues.
"""

from os import listdir
from os.path import isfile, join
import os
from PIL import Image
from tqdm.notebook import tqdm

IMAGE_PATH = '/content/drive/MyDrive/data2/images'
files = [f for f in listdir(IMAGE_PATH) if isfile(join(IMAGE_PATH, f))]

base_size = None
for file in tqdm(files):
  file2 = os.path.join(IMAGE_PATH,file)
  img = Image.open(file2)
  sz = img.size
  if base_size and sz!=base_size:
    print(f"Inconsistant size: {file2}")
  elif img.mode!='L':
    print(f"Inconsistant color format: {file2}")
  else:
    base_size = sz

"""## Perform Initial Training

This code performs the initial training.  Set SNAP low enough to get a snapshot before Colab forces you to quit.
"""

import os

# Modify these to suit your needs
EXPERIMENTS = "/content/drive/MyDrive/data2/experiments"
DATA = "/content/drive/MyDrive/data2/dataset/xray"
SNAP = 10

# Build the command and run it
cmd = f"/usr/bin/python3 /content/stylegan2-ada-pytorch/train.py "\
  f"--snap {SNAP} --outdir {EXPERIMENTS} --data {DATA}"
!{cmd}

"""## Resume Training

You can now resume training after you are interrupted by something in the pervious step.
"""

import os

# Modify these to suit your needs
EXPERIMENTS = "/content/drive/MyDrive/data2/experiments"
NETWORK = "network-snapshot-000000.pkl"
#RESUME = os.path.join(EXPERIMENTS, \
#                "00000-xray-auto1", NETWORK)
RESUME = os.path.join(EXPERIMENTS, \
                "00003-xray-auto1-resumecustom", NETWORK)

DATA = "/content/drive/MyDrive/data2/dataset/xray"
SNAP = 5

# Build the command and run it
cmd = f"/usr/bin/python3 /content/stylegan2-ada-pytorch/train.py "\
  f"--snap {SNAP} --resume {RESUME} --outdir {EXPERIMENTS} --data {DATA}"
!{cmd}